version: "3.9"

services:
  zoo1:
    image: zookeeper:3.4.9
    hostname: zoo1
    ports:
      - "2181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
      ZOO_SERVERS: server.1=zoo1:2888:3888

  kafka1:
    image: confluentinc/cp-kafka:5.5.1
    hostname: kafka1
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://127.0.0.1:29092,LISTENER_DOCKER_EXTERNAL://127.0.0.1:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_CREATE_TOPICS: notification:1:1:compact
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zoo1
    healthcheck:
      test: nc -z localhost 9092 || exit -1
      start_period: 15s
      interval: 5s
      timeout: 10s
      retries: 10

  #postgresql container
  belevich_postgres14:
    image: postgres:14-alpine
    restart: always
    environment:
      - POSTGRES_DB=supplier_portal
      - POSTGRES_PASSWORD=admin
      - POSTGRES_USER=postgres
      - SERVICE_NAME=db
      - SERVICE_5432_NAME=db
    hostname: belevich_postgres14
    container_name: belevich_postgres14
    ports:
      - "5432:54321"
    healthcheck:
      test: "pg_isready -h 127.0.0.1 -p 5432"
      timeout: 10s
      retries: 5

  #server container
  supplier_portal_server:
    build:
      context: .
      dockerfile: sbt/Dockerfile
    restart: always
    container_name: supplier_portal_server
    links:
      - belevich_postgres14
    depends_on:
      belevich_postgres14:
        condition: service_healthy
      kafka1:
        condition: service_healthy
    expose:
      - 8088
    ports:
      - "8088:8088"
    volumes:
      - target:/supplier_portal/common/target
      - ../.:/supplier_portal
    working_dir: /supplier_portal
    command: sbt run

  #scheduler container
  supplier_portal_scheduler:
    build:
      context: .
      dockerfile: sbt/Dockerfile
    restart: always
    container_name: supplier_portal_scheduler
    links:
      - belevich_postgres14
    depends_on:
      belevich_postgres14:
        condition: service_healthy
      kafka1:
        condition: service_healthy
    volumes:
      - target:/supplier_portal/common/target
      - ../common:/supplier_portal/common
      - ../scheduler:/supplier_portal/scheduler
      - ../log_files:/supplier_portal/scheduler/log_files
    working_dir: /supplier_portal/scheduler
    command: sbt run

volumes:
  target: # to exclude target folder from modules to avoid overriding