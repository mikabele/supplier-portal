apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    service: kafka
    app: supplier-portal
  name: kafka-deployment
  #namespace: supplier-portal-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: supplier-portal
  template:
    metadata:
      labels:
        app: supplier-portal
    spec:
      containers:
        - name: kafka1
          env:
            - name: KAFKA_ADVERTISED_LISTENERS
              value: LISTENER_DOCKER_INTERNAL://127.0.0.1:29092,LISTENER_DOCKER_EXTERNAL://127.0.0.1:9092
            - name: KAFKA_BROKER_ID
              value: "1"
            - name: KAFKA_CREATE_TOPICS
              value: notification:1:1:compact
            - name: KAFKA_INTER_BROKER_LISTENER_NAME
              value: LISTENER_DOCKER_INTERNAL
            - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
              value: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
            - name: KAFKA_LOG4J_LOGGERS
              value: kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO
            - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
              value: "1"
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: zoo1:2181
          image: confluentinc/cp-kafka:5.5.1
          #          livenessProbe:
          #            tcpSocket:
          #              port: 9092
          #            failureThreshold: 10
          #            periodSeconds: 5
          #            timeoutSeconds: 10
          ports:
            - containerPort: 9092
            - containerPort: 29092
          resources: { }

      initContainers:
        # zoo-keeper container inside pod
        - name: init-zoo
          image: alpine:latest
          command : ['sh','-c','for i in {1..100}; do sleep 1; if nc -z zoo1 2181 || exit -1; then exit 0; fi; done; exit 1']
      hostname: kafka1
      restartPolicy: Always
status: { }